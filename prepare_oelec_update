#!/bin/bash

# ################################################
# Copy OpenELEC partitions from <source> to <dest>
# <source> can be:
# - OpenELEC UPDATE archive
# ------------------------------------------------
# USES:
#   tar
#   u-boot-tools
# ################################################


if [ "${1}" = "" ] || [ ! -f ${1} ]; then
    echo "source file not found"
    echo "USAGE: prepare_oelec_update <oelec.tar> [dest_dir] "
    exit 1
fi

needed_packages=""

_testpkg=$(dpkg -l | grep u-boot-tools)
if [ "${_testpkg}" = "" ]; then
    needed_packages="${needed_packages}u-boot-tools "
fi
_testpkg=$(dpkg -l | grep "ii  tar")
if [ "${_testpkg}" = "" ]; then
    needed_packages="${needed_packages}tar "
fi

if [ ! "${needed_packages}" = "" ]; then
    echo "You have to install ${needed_packages} !"
    exit 1
fi


source=${1}

# ========================
# Check and prepare source
# ========================

if [ -f ${source} ]; then
    # source is image file
    if [ "${2}" = "" ]; then
	indir="OelecUPDATE"
    else
	mkdir -p ${2} > /dev/null 2>&1
	if [ $? -ne 0 ]; then
	    indir="OelecUPDATE"
	else
	    indir=${2}
	fi
    fi
    mkdir -p ${indir} > /dev/null 2>&1
    rm -rf ${indir}/*
else
    echo "${source} NOT FOUND !, Exiting."
    exit 1
fi

echo ""
echo "Preparing OpenELEC Update files in ${indir}"

sleep 1


# ----------
# ** Extract
cp ${source} ${indir}
cd ${indir}
source=$(basename ${source})
_name="${source%.*}"
tar -xf ${source}
if [ $? -ne 0 ]; then
    echo "ERROR extracting archive."
    cd ..
    exit 1
fi
rm ${source}

# ** Prepare INITRD for multiboot
cd ..
if [ ! -f ${indir}/${_name}/target/INITRD ]; then
    echo "OpenELEC INITRD not found!"
    exit 1
fi

echo "Preparing INITRD..."
cd ${indir}/${_name}/target
cp INITRD INITRD.orig

dd if=INITRD of=initrd.oelec bs=64 skip=1 > /dev/null 2>&1
mkdir init > /dev/null 2>&1
rm initrd.new > /dev/null 2>&1
rm INITRD > /dev/null 2>&1

cd init
cpio -i < ../initrd.oelec > /dev/null 2>&1

if [ ! -f platform_init ]; then
    echo "#!/bin/sh" > platform_init
    chmod +x platform_init
fi

echo "" >> platform_init
echo "mkdir /mnt" >> platform_init
echo "mount /dev/mmcblk0p1 /mnt" >> platform_init
echo "cp /mnt/bootsel.ini /mnt/boot.ini" >> platform_init
echo "umount /mnt" >> platform_init
echo "rmdir /mnt" >> platform_init

find | cpio -H newc -o > ../initrd.new
cd ..
mkimage -A arm -O linux -T ramdisk -C none -a 0 -e 0 -n "RootFS [Odroid]" -d initrd.new INITRD > /dev/null 2>&1
if [ $? -ne 0 ]; then
    echo "ERROR creating OpenELEC INITRD."
    rm -rf ${indir}/* > /dev/null 2>&1
    rmdir ${indir} > /dev/null 2>&1
    exit 1
fi

cp INITRD ../../
cp KERNEL ../../
cp SYSTEM ../../

rm -rf *
cd ..
rm -rf *
cd ..
rmdir ${_name}
cd ..


echo ""
echo "OpenELEC Update files ready in ${indir}"
echo ""
# -------------------------------------------------------------------
